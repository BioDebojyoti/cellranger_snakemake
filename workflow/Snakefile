# Snakemake pipeline for scRNA-seq data using Cell Ranger and Seurat with Docker containers
import os, sys
import pandas as pd


include: "common.smk"


# print(list(rules.__dict__.keys()))


include: os.path.join("rules", "rule_mkfastq.smk")
# one the below three needs to run depending on the experimental design followed by optional aggregate rule
include: os.path.join("rules", "rule_count.smk")


# include: os.path.join("rules", "rule_vdj.smk")
# include: os.path.join("rules", "rule_multi.smk")


include: os.path.join("rules", "rule_aggregate.smk")


# print(input_for_cellranger_vdj("here"))
rules_list = list(rules.__dict__.keys())  # list(workflow.__dict__.keys())
# for k in rules_list:
#     print(k + getattr())
# print(getattr(workflow, k))


# rule all:
#     input:
#         expand(
#             "{vdj_outdir}/{sample}_vdj/outs/metrics_summary.csv",
#             sample=list(vdj_fastq_dict.keys()),
#             vdj_outdir=vdj_outdir,
#         ),


# include: "rules/rule_mkvdjref.smk"
# print("bcl folder  : " + bcl_folder)
# print(samples_df)
# print(samples)
# print(expand("{s}_{s_n}_L00{l}_R{read}.fastq.gz", s=samples, s_n=sample_names, l=lanes, read=[1,2]))
# print(lanes)
# print(rules.cellranger_count.output.summary_html)


# Define rules
rule aggr_all:
    input:
        flag=os.path.join(outdir, "mkfastq.sucess.csv"),
        aggr_h5=expand(
            "{count_outdir}/aggr_results/outs/count/filtered_feature_bc_matrix.h5",
            count_outdir=count_outdir,
        ),


# rule cellranger_count_b4all:
#     output:
#         aggr_input_csv=expand(
#             "{count_outdir}/aggregation_count.csv", count_outdir=count_outdir
#         ),
#     input:
#         flag=os.path.join(outdir, "mkfastq.sucess.csv"),
#         count_info_h5=expand(
#             "{count_outdir}/{sample}_count/outs/molecule_info.h5",
#             sample=list(fastq_dict.keys()),
#             count_outdir=count_outdir,
#         ),
#     params:
#         countdir=count_outdir,
#     shell:
#         """bash scripts/get_aggr_csv.sh {params.countdir} > {params.countdir}/aggregation_count.csv"""
# include: os.path.join("rules","rule_aggregate.smk")
